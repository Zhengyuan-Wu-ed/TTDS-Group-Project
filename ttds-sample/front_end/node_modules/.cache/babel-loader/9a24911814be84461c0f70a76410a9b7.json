{"ast":null,"code":"export default class HttpUtil {\n  // 只需要指定访问的API\n  static get(url) {\n    return new Promise((resolve, reject) => {\n      fetch(url).then(response => {\n        console.log(response);\n\n        if (response.ok) {\n          return response;\n        } else {\n          throw new Error(response.status + \" : \" + response.statusText);\n        }\n      }).then(result => resolve(result)).catch(error => {\n        reject(error);\n      });\n    });\n  } // 不仅指定api，还需要从前端传递参数信息过来\n\n\n  static post(url, data) {\n    return new Promise((resolve, reject) => {\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(response => response.json()).then(result => resolve(result)).catch(error => {\n        reject(error);\n      });\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/lingyun/EdinburghPGT/TTDS/Project/ttds-sample/front_end/src/pages/HttpUtil.js"],"names":["HttpUtil","get","url","Promise","resolve","reject","fetch","then","response","console","log","ok","Error","status","statusText","result","catch","error","post","data","method","headers","body","JSON","stringify","json"],"mappings":"AAAA,eAAe,MAAMA,QAAN,CAAe;AAC1B;AACU,SAAHC,GAAG,CAACC,GAAD,EAAK;AACX,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AAClCC,MAAAA,KAAK,CAACJ,GAAD,CAAL,CACKK,IADL,CACUC,QAAQ,IAAE;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,YAAGA,QAAQ,CAACG,EAAZ,EAAe;AACX,iBAAOH,QAAP;AACH,SAFD,MAEK;AACD,gBAAM,IAAII,KAAJ,CAAUJ,QAAQ,CAACK,MAAT,GAAkB,KAAlB,GAAyBL,QAAQ,CAACM,UAA5C,CAAN;AACH;AACJ,OARL,EASKP,IATL,CASUQ,MAAM,IAAEX,OAAO,CAACW,MAAD,CATzB,EAUKC,KAVL,CAUWC,KAAK,IAAE;AACVZ,QAAAA,MAAM,CAACY,KAAD,CAAN;AACH,OAZL;AAaH,KAdM,CAAP;AAeH,GAlByB,CAmB1B;;;AACW,SAAJC,IAAI,CAAChB,GAAD,EAAMiB,IAAN,EAAW;AAClB,WAAO,IAAIhB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AAClCC,MAAAA,KAAK,CAACJ,GAAD,EAAK;AACNkB,QAAAA,MAAM,EAAE,MADF;AAENC,QAAAA,OAAO,EAAC;AACJ,oBAAU,kBADN;AAEJ,0BAAgB;AAFZ,SAFF;AAMNC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AANA,OAAL,CAAL,CAQCZ,IARD,CAQMC,QAAQ,IAAEA,QAAQ,CAACiB,IAAT,EARhB,EASClB,IATD,CASMQ,MAAM,IAAEX,OAAO,CAACW,MAAD,CATrB,EAUCC,KAVD,CAUOC,KAAK,IAAE;AACVZ,QAAAA,MAAM,CAACY,KAAD,CAAN;AACH,OAZD;AAaH,KAdM,CAAP;AAeH;;AApCyB","sourcesContent":["export default class HttpUtil {\n    // 只需要指定访问的API\n    static get(url){\n        return new Promise((resolve, reject)=>{\n            fetch(url)\n                .then(response=>{\n                    console.log(response)\n                    if(response.ok){\n                        return response;\n                    }else{\n                        throw new Error(response.status + \" : \" +response.statusText);\n                    }\n                })\n                .then(result=>resolve(result))\n                .catch(error=>{\n                    reject(error);\n                })\n        });\n    }\n    // 不仅指定api，还需要从前端传递参数信息过来\n    static post(url, data){\n        return new Promise((resolve, reject)=>{\n            fetch(url,{\n                method: 'POST',\n                headers:{\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data)\n            })\n            .then(response=>response.json())\n            .then(result=>resolve(result))\n            .catch(error=>{\n                reject(error)\n            })\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}