{"ast":null,"code":"import _classCallCheck from\"/Users/lingyun/EdinburghPGT/TTDS/Project/ttds-sample/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/lingyun/EdinburghPGT/TTDS/Project/ttds-sample/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var HttpUtil=/*#__PURE__*/function(){function HttpUtil(){_classCallCheck(this,HttpUtil);}_createClass(HttpUtil,null,[{key:\"get\",value:// 只需要指定访问的API\nfunction get(url){return new Promise(function(resolve,reject){fetch(url).then(function(response){// console.log(response)\nif(response.ok){return response.json();}else{throw new Error(response.status+\" : \"+response.statusText);}}).then(function(result){return resolve(result);}).catch(function(error){reject(error);});});}// 不仅指定api，还需要从前端传递参数信息过来\n},{key:\"post\",value:function post(url,data){return new Promise(function(resolve,reject){fetch(url,{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify(data)}).then(function(response){return response.json();}).then(function(result){return resolve(result);}).catch(function(error){reject(error);});});}}]);return HttpUtil;}();export{HttpUtil as default};","map":{"version":3,"sources":["/Users/lingyun/EdinburghPGT/TTDS/Project/ttds-sample/front_end/src/pages/HttpUtil.js"],"names":["HttpUtil","url","Promise","resolve","reject","fetch","then","response","ok","json","Error","status","statusText","result","catch","error","data","method","headers","body","JSON","stringify"],"mappings":"2WAAqBA,CAAAA,Q,0HACjB;AACA,aAAWC,GAAX,CAAe,CACX,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAmB,CAClCC,KAAK,CAACJ,GAAD,CAAL,CACKK,IADL,CACU,SAAAC,QAAQ,CAAE,CACZ;AACA,GAAGA,QAAQ,CAACC,EAAZ,CAAe,CACX,MAAOD,CAAAA,QAAQ,CAACE,IAAT,EAAP,CACH,CAFD,IAEK,CACD,KAAM,IAAIC,CAAAA,KAAJ,CAAUH,QAAQ,CAACI,MAAT,CAAkB,KAAlB,CAAyBJ,QAAQ,CAACK,UAA5C,CAAN,CACH,CACJ,CARL,EASKN,IATL,CASU,SAAAO,MAAM,QAAEV,CAAAA,OAAO,CAACU,MAAD,CAAT,EAThB,EAUKC,KAVL,CAUW,SAAAC,KAAK,CAAE,CACVX,MAAM,CAACW,KAAD,CAAN,CACH,CAZL,EAaH,CAdM,CAAP,CAeH,CACD;oBACA,cAAYd,GAAZ,CAAiBe,IAAjB,CAAsB,CAClB,MAAO,IAAId,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAmB,CAClCC,KAAK,CAACJ,GAAD,CAAK,CACNgB,MAAM,CAAE,MADF,CAENC,OAAO,CAAC,CACJ,SAAU,kBADN,CAEJ,eAAgB,kBAFZ,CAFF,CAMNC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf,CANA,CAAL,CAAL,CAQCV,IARD,CAQM,SAAAC,QAAQ,QAAEA,CAAAA,QAAQ,CAACE,IAAT,EAAF,EARd,EASCH,IATD,CASM,SAAAO,MAAM,QAAEV,CAAAA,OAAO,CAACU,MAAD,CAAT,EATZ,EAUCC,KAVD,CAUO,SAAAC,KAAK,CAAE,CACVX,MAAM,CAACW,KAAD,CAAN,CACH,CAZD,EAaH,CAdM,CAAP,CAeH,C,+BApCgBf,Q","sourcesContent":["export default class HttpUtil {\n    // 只需要指定访问的API\n    static get(url){\n        return new Promise((resolve, reject)=>{\n            fetch(url)\n                .then(response=>{\n                    // console.log(response)\n                    if(response.ok){\n                        return response.json();\n                    }else{\n                        throw new Error(response.status + \" : \" +response.statusText);\n                    }\n                })\n                .then(result=>resolve(result))\n                .catch(error=>{\n                    reject(error);\n                })\n        });\n    }\n    // 不仅指定api，还需要从前端传递参数信息过来\n    static post(url, data){\n        return new Promise((resolve, reject)=>{\n            fetch(url,{\n                method: 'POST',\n                headers:{\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data)\n            })\n            .then(response=>response.json())\n            .then(result=>resolve(result))\n            .catch(error=>{\n                reject(error)\n            })\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}